/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/oPmmZibcO7x
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { Fragment, useState } from "react"
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card"
import { Textarea } from "@/components/ui/textarea"
import { KeyBips, Wallet } from '@/services/bitcoin/key/key.service'
import { Label } from '../ui/label'

type ActiveTab = KeyBips
const tabs: KeyBips[] = ['BIP32', 'BIP44', 'BIP49', 'BIP84', 'BIP86']

export function ExtendedKeysTabs({wallets}: {wallets?: Record<KeyBips, Wallet>}) {
  const [activeTab, setActiveTab] = useState<ActiveTab>("BIP32")
  return (
    
      <Card>
        {/* <div className="grid grid-cols-1 md:grid-cols-2 gap-8"> */}
        <CardHeader>
          <CardTitle>Extended Keys</CardTitle>
        </CardHeader>
        <CardContent className="grid gap-4">
          <div className="grid gap-2">
            <div className="flex items-center gap-4">
              {tabs.map((key) => (
                <button
                  key={key}
                  className={`px-4 py-2 rounded-t-md transition-colors ${
                    activeTab === key ? "bg-primary text-primary-foreground" : "bg-muted hover:bg-muted/80"
                  }`}
                  onClick={() => setActiveTab(key as ActiveTab)}
                >
                  {key}
                </button>
              ))}
            </div>
            {tabs.map((key) => (
              activeTab === key && (
                <Fragment key={key}>
                <Label htmlFor={`${key}-private`}>Private Key</Label>
                <Textarea
                  key={key}
                  id={`${key}-private`}
                  readOnly
                rows={2}
                value={wallets ? wallets[key]?.privKey : ''}
                className='font-mono'
                />
                <Label htmlFor={`${key}-public`}>Public Key</Label>
                <Textarea
                  key={key}
                  id={`${key}-private`}
                  readOnly
                rows={2}
                value={wallets ? wallets[key]?.pubKey : ''}
                className='font-mono'
                />
                </Fragment>
              )
            ))}
          </div>
        </CardContent>
        {/* </div> */}
      </Card>      
    
  )
}
